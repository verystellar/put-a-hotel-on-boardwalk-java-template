/*
 * This source file was generated by the Gradle 'init' task
 */
package org.circular;
import java.util.Random;
@SuppressWarnings("unchecked")
public class CircularlyLinkedList {

    Node head;
    Node current;
    Node tail;

    public CircularlyLinkedList() {
        head = null;
        current = head;
        tail = null;
    }

    void addNode(Node n) {
        Node curr = current;
        if (head == null) {
            head = n;
            current = n;
            head.next = head;
            return;
        }

        while(curr.next != head) {
            curr = curr.next;
        }
        curr.next = n;
        tail = n;
        tail.next = head;
    }

    Object get_current(){
        return current.getData();
    }

    void next(){
        current = current.next;
    }

    void rollDice(){
        Random random = new Random();
        int die1 = random.nextInt(6) + 1;
        int die2 = random.nextInt(6) + 1;
        int total = die1 + die2;
        System.out.println("You rolled a " + total + "!");
        int temp = 1;
        while(temp < total){
            current = current.next;
            temp++;
        }
    }

    public static void main(String[] args) {
        BoardBuilder b = new BoardBuilder();
        CircularlyLinkedList c = b.buildBoard();
        for(int i = 0; i < 41; i++){ //40 pieces of data, last display should be 'Go' signaling ending at head
            System.out.println(c.get_current());
            c.next();
        }
        c.rollDice();
        System.out.println(c.get_current()); //should be moved forward by however much was 'rolled'

    }
}
